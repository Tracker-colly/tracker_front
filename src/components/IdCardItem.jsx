import CardMaker from "./CardMaker";
import images from "../libs/images"
import CardCounter from "./CardCounter";
import Profile from "./Profile";
import consts from "../libs/consts"
import { defaultProfile } from "../utils/utils";
import { useEffect, useState } from "react";

/**
 * card
 * @param {{
 * type:"admin"|"staff"|"applicant"
 * }} param0 
 * @returns 
 */
export default function IdCardItem({
    style,
    animClass,
    type = "admin",
    count = 1,
    memberList = [],
    onClick,
    active = false,
    disabled = false
}) {

    const [isView, setIsView] = useState(true);

    const typeInfo = {
        admin: {
            class: "blue",
            title: "Administrator Card"
        },
        staff: {
            class: "red",
            title: "Staff Card"
        },
        applicant: {
            class: "green",
            title: "Applicant Card"
        }
    }

    useEffect(() => {
        if (active) {
            setTimeout(() => {
                setIsView(false)
            }, 200)
        }
    }, [active])

    return <div
        style={{
            ...style,
            // zIndex: focusIndex,
        }}
        className={"idcard-item-box " + typeInfo[type].class + (active ? " active" : "") + (disabled ? " disabled" : "") + (animClass ? ` ${animClass}` : "")}
        onClick={() => {
            if (onClick) onClick();
        }}
    >
        <div className={"bg " + typeInfo[type].class} />
        {isView && <>
            <CardMaker />
            <p style={{
                fontSize: 18,
                fontWeight: 500,
            }} className="color-white mt-4">{typeInfo[type].title}</p>
            <CardCounter num={count} />
            {/* <img style={{
            position: "absolute",
            bottom: 20,
            right: 20,
            width: 106,
            height: 10,
            objectFit: "contain",
        }} src={images.logo} alt="" /> */}
            <div style={{
                position: "absolute",
                display: "flex",
                height: 34,
                bottom: 45,
                left: 20,
            }}>
                {memberList.filter((v, i) => i < 4).map((v, i) => {
                    return <img
                        style={{
                            position: "absolute",
                            left: i * 17,
                            width: 34,
                            height: 34,
                            border: "1px solid #FFF",
                            borderRadius: 100,
                            background: "#FFF"
                        }}
                        src={consts.s3url + v}
                        onError={defaultProfile}
                        alt="" />
                })}
                {memberList.length > 4 && <div style={{
                    position: "absolute",
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    left: 4 * 17,
                    width: 34,
                    height: 34,
                    fontSize: 13,
                    fontWeight: 600,
                    borderRadius: 100,
                    background: "#FFF"
                }} >+{memberList.length - 4}</div>}

            </div>
        </>}


        {/* <div style={{
            position: "absolute",
            bottom: 20,
            right: 20,
        }} src={images.logo} alt="" >
            <svg width="107" height="11" viewBox="0 0 107 11" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M70.3309 10.3886C69.6472 10.3886 69.0143 10.2663 68.4332 10.0202C67.8522 9.7742 67.349 9.42531 66.925 8.97078C66.501 8.51625 66.1684 7.9811 65.9298 7.36534C65.6912 6.74957 65.5713 6.06986 65.5713 5.32899C65.5713 4.58813 65.6912 3.90842 65.9298 3.29265C66.1684 2.67688 66.501 2.14173 66.925 1.6872C67.349 1.23268 67.8522 0.883787 68.4332 0.637758C69.0143 0.391729 69.6472 0.269409 70.3309 0.269409C71.1308 0.269409 71.8453 0.426479 72.4758 0.742008C73.1063 1.05754 73.6317 1.51068 74.0521 2.1042L72.4944 3.6888C72.2137 3.31767 71.9071 3.0355 71.5734 2.8409C71.2396 2.6463 70.8662 2.549 70.4545 2.549C70.0997 2.549 69.7746 2.61433 69.4779 2.7436C69.1812 2.87287 68.9277 3.06052 68.7176 3.30655C68.5074 3.55258 68.343 3.84587 68.2231 4.1892C68.1032 4.53253 68.0438 4.91199 68.0438 5.32899C68.0438 5.74599 68.1032 6.12546 68.2231 6.46879C68.343 6.81212 68.5074 7.10541 68.7176 7.35144C68.9277 7.59747 69.1812 7.78511 69.4779 7.91438C69.7746 8.04365 70.0997 8.10898 70.4545 8.10898C70.8662 8.10898 71.2396 8.01168 71.5734 7.81708C71.9071 7.62248 72.2137 7.34032 72.4944 6.96919L74.0521 8.55378C73.6317 9.13758 73.1063 9.58933 72.4758 9.90903C71.8453 10.2287 71.1308 10.3886 70.3309 10.3886Z" fill="white" />
                <path d="M79.0813 10.3886C78.389 10.3886 77.7498 10.2635 77.1651 10.0133C76.5803 9.76308 76.071 9.40863 75.6383 8.94993C75.2056 8.49123 74.8693 7.95608 74.6307 7.34449C74.3921 6.73289 74.2722 6.06152 74.2722 5.32899C74.2722 4.59647 74.3921 3.9251 74.6307 3.3135C74.8693 2.7019 75.2056 2.16675 75.6383 1.70805C76.071 1.24936 76.5803 0.894907 77.1651 0.644708C77.7498 0.394509 78.389 0.269409 79.0813 0.269409C79.7736 0.269409 80.4226 0.394509 81.0037 0.644708C81.5847 0.894907 82.0891 1.24936 82.5181 1.70805C82.9471 2.16675 83.2821 2.7019 83.5257 3.3135C83.7692 3.9251 83.8904 4.59647 83.8904 5.32899C83.8904 6.06152 83.7692 6.73567 83.5257 7.35144C83.2821 7.9672 82.9471 8.50235 82.5181 8.95688C82.0891 9.41141 81.5847 9.76308 81.0037 10.0133C80.4226 10.2635 79.7822 10.3886 79.0813 10.3886ZM79.0813 8.10898C79.4114 8.10898 79.718 8.04365 80.0023 7.91438C80.2866 7.78511 80.5339 7.59747 80.7441 7.35144C80.9542 7.10541 81.1186 6.81212 81.2386 6.46879C81.3585 6.12546 81.4178 5.74599 81.4178 5.32899C81.4178 4.91199 81.3585 4.52001 81.2386 4.18225C81.1186 3.84448 80.9542 3.55258 80.7441 3.30655C80.5339 3.06052 80.2866 2.87287 80.0023 2.7436C79.718 2.61433 79.4114 2.549 79.0813 2.549C78.7512 2.549 78.4446 2.61433 78.1603 2.7436C77.8759 2.87287 77.6287 3.06052 77.4185 3.30655C77.2083 3.55258 77.0439 3.84448 76.924 4.18225C76.8041 4.52001 76.7447 4.90226 76.7447 5.32899C76.7447 5.75572 76.8041 6.12546 76.924 6.46879C77.0439 6.81212 77.2083 7.10541 77.4185 7.35144C77.6287 7.59747 77.8759 7.78511 78.1603 7.91438C78.4446 8.04365 78.7512 8.10898 79.0813 8.10898Z" fill="white" />
                <path d="M85.0376 10.194V0.463989H87.4854V8.01166H91.6145V10.194H85.0376Z" fill="white" />
                <path d="M92.3057 10.194V0.463989H94.7535V8.01166H98.8826V10.194H92.3057Z" fill="white" />
                <path d="M100.624 10.194V6.07957L101.193 7.73366L97.3235 0.463989H99.9073L102.701 5.73207H101.205L104.012 0.463989H106.385L102.528 7.73366L103.072 6.07957V10.194H100.624Z" fill="white" />
                <path d="M47.4255 8.06726V6.28807H51.2703V4.23088H47.4255V2.59068H51.7895V0.463989H45.0024V10.194H51.9502V8.06726H47.4255Z" fill="white" />
                <path d="M2.65797 10.194V2.64628H0V0.463989H7.75137V2.64628H5.10577V10.194H2.65797Z" fill="white" />
                <path d="M16.7104 10.194L20.5305 0.463989H22.9412L26.7736 10.194H24.2269L21.2352 1.81228H22.1995L19.2077 10.194H16.7104Z" fill="white" />
                <path d="M32.4322 7.81708C32.0984 8.01168 31.7251 8.10898 31.3134 8.10898C30.9586 8.10898 30.6335 8.04365 30.3368 7.91438C30.0401 7.78511 29.7866 7.59747 29.5765 7.35144C29.3663 7.10541 29.2019 6.81212 29.082 6.46879C28.962 6.12546 28.9027 5.74599 28.9027 5.32899C28.9027 4.91199 28.962 4.53253 29.082 4.1892C29.2019 3.84587 29.3663 3.55258 29.5765 3.30655C29.7866 3.06052 30.0401 2.87287 30.3368 2.7436C30.6335 2.61433 30.9586 2.549 31.3134 2.549C31.7251 2.549 32.0984 2.6463 32.4322 2.8409C32.766 3.0355 33.0726 3.31767 33.3532 3.6888L34.9109 2.1042C34.4906 1.51068 33.9652 1.05754 33.3347 0.742008C32.7042 0.426479 31.9897 0.269409 31.1898 0.269409C30.5061 0.269409 29.8732 0.391729 29.2921 0.637758C28.7111 0.883787 28.2079 1.23268 27.7839 1.6872C27.3598 2.14173 27.0273 2.67688 26.7887 3.29265C26.5501 3.90842 26.4302 4.58813 26.4302 5.32899C26.4302 6.06986 26.5501 6.74957 26.7887 7.36534C27.0273 7.9811 27.3598 8.51625 27.7839 8.97078C28.2079 9.42531 28.7111 9.7742 29.2921 10.0202C29.8732 10.2663 30.5061 10.3886 31.1898 10.3886C31.9897 10.3886 32.7042 10.2287 33.3347 9.90903C33.9652 9.58933 34.4906 9.13758 34.9109 8.55378L33.3532 6.96919C33.0726 7.34032 32.766 7.62248 32.4322 7.81708Z" fill="white" />
                <path d="M40.7372 4.76742L44.2704 0.463989H41.5754L38.2251 4.5061V0.463989H35.802V10.194H38.2251V7.7559V4.62703L41.5469 10.1008L41.6124 10.194H44.4558L40.7372 4.76742Z" fill="white" />
                <path d="M14.5236 7.13041C15.0465 6.85102 15.457 6.46182 15.7512 5.96142C16.064 5.42905 16.221 4.7966 16.221 4.06408C16.221 3.33155 16.064 2.68103 15.7512 2.13893C15.4384 1.59684 14.9946 1.18262 14.4222 0.894888C13.8498 0.607159 13.1674 0.463989 12.3762 0.463989H8.42017V10.194H10.868V2.63238H12.2279C12.7384 2.63238 13.1204 2.75748 13.3714 3.00768C13.6224 3.25788 13.7485 3.60955 13.7485 4.06408C13.7485 4.51861 13.6224 4.85637 13.3714 5.10657C13.1204 5.35677 12.7384 5.48187 12.2279 5.48187H10.9137L12.2044 7.60857L13.7732 10.194H16.3941L14.5236 7.13041Z" fill="white" />
                <path d="M59.3739 7.13041C59.8969 6.85102 60.3073 6.46182 60.6016 5.96142C60.9143 5.42905 61.0713 4.7966 61.0713 4.06408C61.0713 3.33155 60.9143 2.68103 60.6016 2.13893C60.2888 1.59684 59.845 1.18262 59.2726 0.894888C58.7002 0.607159 58.0178 0.463989 57.2265 0.463989H53.2705V10.194H55.7183V2.63238H57.0782C57.5888 2.63238 57.9708 2.75748 58.2217 3.00768C58.4727 3.25788 58.5988 3.60955 58.5988 4.06408C58.5988 4.51861 58.4727 4.85637 58.2217 5.10657C57.9708 5.35677 57.5888 5.48187 57.0782 5.48187H55.7641L57.0547 7.60857L58.6235 10.194H61.2444L59.3739 7.13041Z" fill="white" />
            </svg>
        </div> */}
    </div >
}